From b9bbbd73d71cf599d554e12c565d67e1082bdf6e Mon Sep 17 00:00:00 2001
From: Ryan Gonzalez <rymg19@gmail.com>
Date: Wed, 31 Aug 2022 10:09:01 -0500
Subject: [PATCH] Clang build script: Don't build against the sysroot

---
 tools/clang/scripts/build.py | 37 +++++++++---------------------------
 1 file changed, 9 insertions(+), 28 deletions(-)

diff --git a/tools/clang/scripts/build.py b/tools/clang/scripts/build.py
index 73f863c8f07dc..8310a464ae3f4 100755
--- a/tools/clang/scripts/build.py
+++ b/tools/clang/scripts/build.py
@@ -714,7 +714,7 @@ def main():
     # TODO: check if this works now.
     base_cmake_args.append('-DLLVM_ENABLE_LLD=ON')
 
-  if sys.platform.startswith('linux'):
+  if sys.platform.startswith('linux') and False:
     # Download sysroots. This uses basically Chromium's sysroots, but with
     # minor changes:
     # - glibc version bumped to 2.18 to make __cxa_thread_atexit_impl
@@ -1011,33 +1011,14 @@ def main():
   runtimes_triples_args = []
 
   if sys.platform.startswith('linux'):
-    runtimes_triples_args.append(
-        ('i386-unknown-linux-gnu',
-         compiler_rt_cmake_flags(sanitizers=True, profile=True) + [
-             'CMAKE_SYSROOT=%s' % sysroot_i386,
-         ]))
-    runtimes_triples_args.append(
-        ('x86_64-unknown-linux-gnu',
-         compiler_rt_cmake_flags(sanitizers=True, profile=True) + [
-             'CMAKE_SYSROOT=%s' % sysroot_amd64,
-         ]))
-    runtimes_triples_args.append(
-        # Using "armv7a-unknown-linux-gnueabhihf" confuses the compiler-rt
-        # builtins build, since compiler-rt/cmake/builtin-config-ix.cmake
-        # doesn't include "armv7a" in its `ARM32` list.
-        # TODO(thakis): It seems to work for everything else though, see try
-        # results on
-        # https://chromium-review.googlesource.com/c/chromium/src/+/3702739/4
-        # Maybe it should work for builtins too?
-        ('armv7-unknown-linux-gnueabihf',
-         compiler_rt_cmake_flags(sanitizers=True, profile=True) + [
-             'CMAKE_SYSROOT=%s' % sysroot_arm,
-         ]))
-    runtimes_triples_args.append(
-        ('aarch64-unknown-linux-gnu',
-         compiler_rt_cmake_flags(sanitizers=True, profile=True) + [
-             'CMAKE_SYSROOT=%s' % sysroot_arm64,
-         ]))
+    if platform.machine() == 'x86_64':
+      runtimes_triples_args.append(
+          ('x86_64-unknown-linux-gnu',
+           compiler_rt_cmake_flags(sanitizers=True, profile=True)))
+    else:
+      runtimes_triples_args.append(
+          ('aarch64-unknown-linux-gnu',
+           compiler_rt_cmake_flags(sanitizers=True, profile=True)))
   elif sys.platform == 'win32':
     runtimes_triples_args.append(
         ('i386-pc-windows-msvc',
-- 
2.37.2

