From e225a62c5ba351c5ee511a19d3c15e8d18c8b6bb Mon Sep 17 00:00:00 2001
From: Ryan Gonzalez <rymg19@gmail.com>
Date: Wed, 20 Jan 2021 10:33:46 -0600
Subject: [PATCH 23/23] Revert "Reland "build: In LTO links, run just one link
 at once, but give it all cores""

This reverts commit a2ebd1511b2ee20072f0768ffb7620066dc643e9.

The flags given do not work on LLVM 10.
---
 build/config/compiler/BUILD.gn       | 11 +++++------
 build/config/compiler/compiler.gni   |  4 ++++
 build/toolchain/concurrent_links.gni |  1 -
 3 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 880f0f39e91d7..9a20fa34e3c5d 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -599,7 +599,7 @@ config("compiler") {
       # files on Windows (https://crbug.com/871962).
       ldflags += [
         "/opt:lldlto=" + lto_opt_level,
-        "/opt:lldltojobs=all",
+        "/opt:lldltojobs=" + max_jobs_per_link,
 
         # Experimentally determined to yield a reasonable trade-off between
         # build time, run-time performance, and binary size.
@@ -612,11 +612,10 @@ config("compiler") {
       # usage in crbug.com/1038040. Note this will increase build time in
       # Chrome OS.
 
-      # In ThinLTO builds, we run at most one link process at a time,
-      # and let it use all cores.
-      # TODO(thakis): Check if '=0' (that is, number of cores, instead
-      # of "all" which means number of hardware threads) is faster.
-      ldflags += [ "-Wl,--thinlto-jobs=all" ]
+      # Limit the parallelism to avoid too aggressive competition between
+      # linker jobs. This is still suboptimal to a potential dynamic
+      # resource allocation scheme, but should be good enough.
+      ldflags += [ "-Wl,--thinlto-jobs=" + max_jobs_per_link ]
 
       # Limit the size of the ThinLTO cache to the lesser of 10% of
       # available disk space, 10GB and 100000 files.
diff --git a/build/config/compiler/compiler.gni b/build/config/compiler/compiler.gni
index 9e472befb6ca6..ee4a2ded5c012 100644
--- a/build/config/compiler/compiler.gni
+++ b/build/config/compiler/compiler.gni
@@ -73,6 +73,10 @@ declare_args() {
   # If true, use Goma for ThinLTO code generation where applicable.
   use_goma_thin_lto = false
 
+  # Limit the number of jobs (threads/processes) the linker is allowed
+  # to use (for linkers that support this).
+  max_jobs_per_link = 8
+
   # Whether we're using a sample profile collected on an architecture different
   # than the one we're compiling for.
   #
diff --git a/build/toolchain/concurrent_links.gni b/build/toolchain/concurrent_links.gni
index 538007c059c07..2c12d8f8e09e0 100644
--- a/build/toolchain/concurrent_links.gni
+++ b/build/toolchain/concurrent_links.gni
@@ -92,7 +92,6 @@ if (concurrent_links == -1) {
     java_cmd_pool_size = _command_dict.secondary_pool_size
   }
 } else {
-  assert(!use_thin_lto, "can't explicitly set concurrent_links with thinlto")
   concurrent_links_logs =
       [ "concurrent_links set by GN arg (value=$concurrent_links)" ]
 }
-- 
2.29.2

